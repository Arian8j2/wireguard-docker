#!/usr/bin/env bash

# Create a mark that the fork is being used
touch /arian8j2-fork

# Get public IP
if [ -z "$PUBLIC_IP" ]
then
    PUBLIC_IP="publicip"
    export PUBLIC_IP
fi

# Initialize first key if it doesn't exist
if [ ! -e /etc/wireguard/wg0.conf ]  # Was wg*.conf
then
    echo "$(date): wireguard init config - /etc/wireguard/wg0.conf"
    wg genkey | tee /etc/wireguard/wg0.key | wg pubkey > /etc/wireguard/wg0.pub
    SERV_KEY=$(cat /etc/wireguard/wg0.key)
    cat > /etc/wireguard/wg0.conf << EOF
[Interface]
Address = $SUBNET_IP
ListenPort = $PORT
PrivateKey = $SERV_KEY

MTU = 1320
PostUp = iptables -t nat -A POSTROUTING -o $INTERFACE -j MASQUERADE; iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --set-mss 1300; iptables -t mangle -A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --set-mss 1300
PostDown = iptables -t nat -D POSTROUTING -o $INTERFACE -j MASQUERADE; iptables -D FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --set-mss 1300; iptables -t mangle -D POSTROUTING -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --set-mss 1300
EOF
    chmod go-rw /etc/wireguard/wg0.key /etc/wireguard/wg0.conf
fi

add_client() {
    NAME="$1"
    [ -d /etc/wireguard/clients ] || mkdir -p /etc/wireguard/clients

    if [ ! -e "/etc/wireguard/clients/$NAME.pub" ]
    then
        wg genkey | tee /etc/wireguard/clients/"$NAME".key | wg pubkey > /etc/wireguard/clients/"$NAME".pub

        SERV_PUB=$(cat /etc/wireguard/wg0.pub)
        CLIENT_KEY=$(cat /etc/wireguard/clients/"$NAME".key)

        [ -e /etc/wireguard/clients.num ] || echo 2 > /etc/wireguard/clients.num
        N=$(cat /etc/wireguard/clients.num)
        N_READ=$N

        # create client's address
        C=$((N/254))
        if [ "$C" -gt 0 ]
        then
            N=$((N%254+1))
        fi

        # create config
        cat > /etc/wireguard/clients/"$NAME".conf << EOF
[Interface]
PrivateKey = $CLIENT_KEY
Address = $SUBNET.$C.$N/$SUBNET_PREFIX
DNS = $DNS
MTU = 1320

[Peer]
PublicKey = $SERV_PUB
AllowedIPs = 0.0.0.0/0
Endpoint = $PUBLIC_IP:$PORT
EOF
        chmod go-rw /etc/wireguard/clients/"$NAME".key /etc/wireguard/clients/"$NAME".conf
        echo $((N_READ+1)) > /etc/wireguard/clients.num
    fi

    echo
    echo "Client \"$NAME\" config, you can create using following cmds:"
    echo "cat > /etc/wireguard/wg0.conf << EOF"
    cat /etc/wireguard/clients/"$NAME".conf
    echo "EOF"
    echo "systemctl enable wg-quick@wg0.service"
    echo "systemctl start wg-quick@wg0.service"
    echo
    qrencode -t ansiutf8 < /etc/wireguard/clients/"$NAME".conf

    if [ "$WG_CLIENTS_UNSAFE_PERMISSIONS" -eq 1 ]
    then
        chmod -R go+r /etc/wireguard/clients
        chmod go+r /etc/wireguard/clients/"$NAME".conf
    fi
}

wg_up() {
    for conf in /etc/wireguard/wg*.conf
    do
        echo "$(date): wireguard up interface - $conf"
        wg-quick up "$conf"
    done

    # Print first configuration on each container start (useful for quick setup)
    add_client test

    for NAME in /etc/wireguard/clients/*.pub
    do
        PUB=$(cat "$NAME")
        CONF="${NAME%.pub}.conf"
        IP=$(awk '/Address/{print $3}' "$CONF"|awk -F/ '{print $1}')
        wg set wg0 peer "$PUB" allowed-ips "$IP"
    done
}

wg_down() {
    for conf in /etc/wireguard/wg*.conf
    do
        echo "$(date): wireguard down interface - $conf"
        wg-quick down "$conf"
    done
}

wg_up

if [ "$NAT" -eq 1 ]
then
    echo "$(date): setup NAT"
    iptables -t nat -A POSTROUTING -o "$INTERFACE" -j MASQUERADE
fi

# Handle shutdown behavior
finish () {
    echo "$(date): stopping wireguard"
    wg_down
    if [ "$NAT" -eq 1 ]; then
        iptables -t nat -D POSTROUTING -o "$INTERFACE" -j MASQUERADE
    fi
    exit 0
}

trap finish TERM INT QUIT
sleep infinity
